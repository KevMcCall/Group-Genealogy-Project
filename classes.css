/*body {
    counter-reset: myIndex;
}


p::first-line {
    color: red;
    font-family: 'Sansita Swashed', cursive;
    }
    
p {
    counter-increment: myIndex;
}
        
p::before {
    content: counter(myIndex, upper-roman)" . ";
}*/


.flexbox-container {
    display: flex;
    flex-wrap: wrap;
    flex-direction: row;
    justify-content: space-around;

}

img {
    width: 210px;
    height: 260px;
    margin-bottom: 40px;
    border: #FFA500 inset 4px;
}

/* Filter Property, used for images, modify the color, contrast, brightness of an image, filter: effect name (paramaters) */

/* Uses px */
.flex1 {
    filter: blur(4px);
}

/* Uses % to measure */
.flex2 {
    filter: brightness(25%);
}

/* Uses % to measure */
.flex3 {
    filter: contrast(50%);
}

/* X, Y, Blur, Color */
.flex4 {
    filter: drop-shadow(10px 30px 4px #ffa500);
}

/* Uses % to measure */
.flex5 {
    filter: grayscale(50%);
}

/* Uses deg to measure (0/360deg Unchanged) (180 displays complimentary color of img) */
.flex6 {
    filter: hue-rotate(180deg);
    -webkit-filter: hue-rotate(240deg);
}

/* Uses % to measure */
.flex7 {
    filter: invert(100%);
}

/* Uses % to measure */
.flex8 {
    filter: sepia(100%);
    
}


/* Uses % to measure 
.flex8 {
    filter: saturate(90%);
}*/

.box {
    height: 250px;
    width: 200px;
    background-color: #FFFF00;
    transition-duration: 10s;
    transition-property: background-color, transform;
}

.box:hover {
    background-color: #ffd700;
    transform: rotateX(180deg) rotateY(360deg) rotateZ(20deg);
    /* Uses PX */
    transform: rotate3d(x y z) perspective(200px);
}